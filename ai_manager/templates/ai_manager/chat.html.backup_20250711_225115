<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>چت با هوش مصنوعی - پنل مدیریت</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Vazirmatn:wght@300;400;500;700&display=swap');
        
        * {
            font-family: 'Vazirmatn', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .main-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            overflow: hidden;
            margin: 2rem;
            height: calc(100vh - 4rem);
            display: flex;
            flex-direction: column;
        }
        
        /* Header */
        .chat-header {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            padding: 1.5rem;
            display: flex;
            justify-content: between;
            align-items: center;
            position: relative;
            z-index: 10;
        }
        
        .header-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .header-title h1 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        
        .btn-header {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            transition: all 0.3s ease;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
        }
        
        .btn-header:hover {
            background: rgba(255,255,255,0.3);
            color: white;
            transform: translateY(-2px);
        }
        
        /* Chat Area */
        .chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: #f8fafc;
        }
        
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 2rem;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        }
        
        .message {
            display: flex;
            margin-bottom: 1.5rem;
            opacity: 0;
            animation: fadeIn 0.5s ease forwards;
        }
        
        @keyframes fadeIn {
            to { opacity: 1; }
        }
        
        .message.user {
            justify-content: flex-end;
        }
        
        .message-content {
            max-width: 70%;
            padding: 1rem 1.5rem;
            border-radius: 20px;
            position: relative;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .message.ai .message-content {
            background: white;
            border: 1px solid #e2e8f0;
            border-bottom-right-radius: 5px;
        }
        
        .message.user .message-content {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            border-bottom-left-radius: 5px;
        }
        
        .message-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 1rem;
            font-size: 1.2rem;
        }
        
        .message.ai .message-avatar {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }
        
        .message.user .message-avatar {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }
        
        /* Input Area */
        .chat-input-container {
            background: white;
            padding: 1.5rem;
            border-top: 1px solid #e2e8f0;
        }
        
        .input-wrapper {
            display: flex;
            gap: 1rem;
            align-items: flex-end;
        }
        
        .model-selector {
            min-width: 200px;
        }
        
        .model-selector select {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 15px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .model-selector select:focus {
            border-color: #2563eb;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }
        
        .message-input-group {
            flex: 1;
            position: relative;
        }
        
        .message-input {
            width: 100%;
            min-height: 60px;
            max-height: 150px;
            padding: 1rem 4rem 1rem 1.5rem;
            border: 2px solid #e2e8f0;
            border-radius: 30px;
            font-size: 1rem;
            resize: none;
            transition: all 0.3s ease;
            background: #f8fafc;
        }
        
        .message-input:focus {
            outline: none;
            border-color: #2563eb;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            background: white;
        }
        
        .send-button {
            position: absolute;
            left: 10px;
            bottom: 10px;
            width: 40px;
            height: 40px;
            border: none;
            border-radius: 50%;
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .send-button:hover {
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(37, 99, 235, 0.4);
        }
        
        /* Active Keys Display */
        .active-keys-panel {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 5px 20px rgba(0,0,0,0.05);
        }
        
        .active-keys-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .active-keys-header h6 {
            margin: 0;
            color: #374151;
            font-weight: 600;
        }
        
        .key-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            margin: 0.25rem;
            transition: all 0.3s ease;
        }
        
        .key-badge:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(16, 185, 129, 0.3);
        }
        
        .key-badge.inactive {
            background: #9ca3af;
            opacity: 0.7;
        }
        
        /* Loading Animation */
        .typing-indicator {
            display: none;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem;
            background: white;
            border-radius: 20px;
            border-bottom-right-radius: 5px;
            max-width: 70%;
            margin-bottom: 1.5rem;
        }
        
        .typing-dots {
            display: flex;
            gap: 0.3rem;
        }
        
        .typing-dot {
            width: 8px;
            height: 8px;
            background: #9ca3af;
            border-radius: 50%;
            animation: typing 1.4s infinite ease-in-out;
        }
        
        .typing-dot:nth-child(1) { animation-delay: -0.32s; }
        .typing-dot:nth-child(2) { animation-delay: -0.16s; }
        
        @keyframes typing {
            0%, 80%, 100% { transform: scale(0.8); opacity: 0.5; }
            40% { transform: scale(1); opacity: 1; }
        }
        
        /* Welcome Message */
        .welcome-message {
            text-align: center;
            padding: 3rem 2rem;
            color: #6b7280;
        }
        
        .welcome-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #2563eb, #10b981);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .main-container {
                margin: 1rem;
                height: calc(100vh - 2rem);
                border-radius: 15px;
            }
            
            .chat-messages {
                padding: 1rem;
            }
            
            .message-content {
                max-width: 85%;
            }
            
            .input-wrapper {
                flex-direction: column;
                gap: 1rem;
            }
            
            .model-selector {
                min-width: auto;
            }
        }
        
        /* Scrollbar Styling */
        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }
        
        .chat-messages::-webkit-scrollbar-track {
            background: #f1f5f9;
        }
        
        .chat-messages::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
        
        .chat-messages::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Header -->
        <div class="chat-header">
            <div class="header-title">
                <i class="bi bi-robot" style="font-size: 1.8rem;"></i>
                <h1>چت با هوش مصنوعی</h1>
            </div>
            <div class="header-actions">
                <a href="/ai-chat/settings/" class="btn-header">
                    <i class="bi bi-gear"></i>
                    تنظیمات API
                </a>
                <a href="/" class="btn-header">
                    <i class="bi bi-house"></i>
                    داشبورد
                </a>
            </div>
        </div>
        
        <!-- Chat Container -->
        <div class="chat-container">
            <!-- Active Keys Panel -->
            <div class="active-keys-panel">
                <div class="active-keys-header">
                    <h6><i class="bi bi-key"></i> API Keys فعال</h6>
                    <small class="text-muted">آماده برای استفاده</small>
                </div>
                <div id="activeKeys">
                    <!-- API Keys will be loaded here -->
                    <div class="key-badge">
                        <i class="bi bi-chat-square-text"></i>
                        Claude Sonnet 4
                        <span class="badge bg-light text-dark ms-1">فعال</span>
                    </div>
                    <div class="key-badge">
                        <i class="bi bi-lightning"></i>
                        OpenAI GPT-4o
                        <span class="badge bg-light text-dark ms-1">فعال</span>
                    </div>
                    <div class="key-badge inactive">
                        <i class="bi bi-gem"></i>
                        Google Gemini
                        <span class="badge bg-light text-dark ms-1">غیرفعال</span>
                    </div>
                </div>
            </div>
            
            <!-- Messages Area -->
            <div class="chat-messages" id="chatMessages">
                <!-- Welcome Message -->
                <div class="welcome-message">
                    <div class="welcome-icon">
                        <i class="bi bi-robot"></i>
                    </div>
                    <h4>به چت هوش مصنوعی خوش آمدید!</h4>
                    <p>برای شروع گفتگو، یک مدل AI انتخاب کرده و پیام خود را بنویسید.</p>
                </div>
                
                <!-- Sample Messages -->
                <div class="message ai">
                    <div class="message-avatar">
                        <i class="bi bi-robot"></i>
                    </div>
                    <div class="message-content">
                        <strong>Claude AI</strong>
                        <p>سلام! من Claude هستم. چطور می‌تونم کمکتون کنم؟</p>
                        <small class="text-muted">الان</small>
                    </div>
                </div>
                
                <!-- Typing Indicator -->
                <div class="typing-indicator" id="typingIndicator">
                    <div class="message-avatar">
                        <i class="bi bi-robot"></i>
                    </div>
                    <div class="typing-dots">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                    <span class="ms-2 text-muted">در حال تایپ...</span>
                </div>
            </div>
            
            <!-- Input Area -->
            <div class="chat-input-container">
                <div class="input-wrapper">
                    <div class="model-selector">
                        <select class="form-select" id="modelSelect">
                            <option value="">انتخاب مدل AI</option>
                            <option value="claude-sonnet-4">Claude Sonnet 4</option>
                            <option value="gpt-4o">OpenAI GPT-4o</option>
                            <option value="gpt-4">OpenAI GPT-4</option>
                            <option value="gemini-pro">Google Gemini Pro</option>
                        </select>
                    </div>
                    <div class="message-input-group">
                        <textarea 
                            class="message-input" 
                            id="messageInput" 
                            placeholder="پیام خود را بنویسید..."
                            rows="1"></textarea>
                        <button class="send-button" id="sendButton" onclick="sendMessage()">
                            <i class="bi bi-send"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Auto-resize textarea
        const messageInput = document.getElementById('messageInput');
        const chatMessages = document.getElementById('chatMessages');
        const typingIndicator = document.getElementById('typingIndicator');
        
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = Math.min(this.scrollHeight, 150) + 'px';
        });
        
        // Send message on Enter (Shift+Enter for new line)
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
        
        // Send Message Function
        async function sendMessage() {
            const message = messageInput.value.trim();
            const model = document.getElementById('modelSelect').value;
            
            if (!message) return;
            if (!model) {
                alert('لطفاً ابتدا یک مدل AI انتخاب کنید');
                return;
            }
            
            // Clear input
            messageInput.value = '';
            messageInput.style.height = 'auto';
            
            // Add user message
            addMessage('user', message, 'شما');
            
            // Show typing indicator
            showTyping();
            
            try {
                // Send to API
                const response = await fetch('/ai-chat/api/chat/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRFToken': getCookie('csrftoken')
                    },
                    body: JSON.stringify({
                        message: message,
                        provider: model.split('-')[0], // Extract provider from model name
                        model: model
                    })
                });
                
                const data = await response.json();
                
                // Hide typing indicator
                hideTyping();
                
                if (data.success) {
                    // Add AI response
                    const modelName = getModelDisplayName(model);
                    addMessage('ai', data.content, modelName);
                    
                    // Show usage info if available
                    if (data.usage) {
                        console.log('Usage:', data.usage);
                    }
                } else {
                    addMessage('ai', `خطا: ${data.error}`, 'سیستم');
                }
                
            } catch (error) {
                hideTyping();
                addMessage('ai', `خطا در ارتباط: ${error.message}`, 'سیستم');
            }
            
            // Scroll to bottom
            scrollToBottom();
        }
        
        // Add message to chat
        function addMessage(type, content, sender) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}`;
            
            const time = new Date().toLocaleTimeString('fa-IR', {
                hour: '2-digit',
                minute: '2-digit'
            });
            
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    <i class="bi bi-${type === 'user' ? 'person' : 'robot'}"></i>
                </div>
                <div class="message-content">
                    <strong>${sender}</strong>
                    <p>${content}</p>
                    <small class="text-muted">${time}</small>
                </div>
            `;
            
            // Remove welcome message if exists
            const welcomeMsg = chatMessages.querySelector('.welcome-message');
            if (welcomeMsg) {
                welcomeMsg.remove();
            }
            
            chatMessages.appendChild(messageDiv);
        }
        
        // Show/Hide typing indicator
        function showTyping() {
            typingIndicator.style.display = 'flex';
            scrollToBottom();
        }
        
        function hideTyping() {
            typingIndicator.style.display = 'none';
        }
        
        // Scroll to bottom
        function scrollToBottom() {
            setTimeout(() => {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 100);
        }
        
        // Get model display name
        function getModelDisplayName(model) {
            const names = {
                'claude-sonnet-4': 'Claude Sonnet 4',
                'gpt-4o': 'GPT-4o',
                'gpt-4': 'GPT-4',
                'gemini-pro': 'Gemini Pro'
            };
            return names[model] || 'AI Assistant';
        }
        
        // Get CSRF token
        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        
        // Load active API keys on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadActiveKeys();
        });
        
        // Load active keys
        async function loadActiveKeys() {
            try {
                const response = await fetch('/ai-chat/active-keys/');
                const data = await response.json();
                
                if (data.success) {
                    updateActiveKeysDisplay(data.keys);
                }
            } catch (error) {
                console.error('Error loading active keys:', error);
            }
        }
        
        // Update active keys display
        function updateActiveKeysDisplay(keys) {
            const container = document.getElementById('activeKeys');
            container.innerHTML = '';
            
            keys.forEach(key => {
                const badge = document.createElement('div');
                badge.className = `key-badge ${key.is_active ? '' : 'inactive'}`;
                badge.innerHTML = `
                    <i class="bi bi-${getProviderIcon(key.provider)}"></i>
                    ${key.model_name}
                    <span class="badge bg-light text-dark ms-1">
                        ${key.is_active ? 'فعال' : 'غیرفعال'}
                    </span>
                `;
                container.appendChild(badge);
            });
        }
        
        // Get provider icon
        function getProviderIcon(provider) {
            const icons = {
                'claude': 'chat-square-text',
                'openai': 'lightning',
                'gemini': 'gem',
                'groq': 'cpu',
                'deepseek': 'search'
            };
            return icons[provider] || 'robot';
        }
    </script>
</body>
</html>